//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------



using Model.BL.DTO.Enums;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IRequestMotorWCF")]
public interface IRequestMotorWCF
{

     void MarkAs_Async(long ids_Request, int state, int? id_User, int? id_Device);
     void AddPrensa(int id_Prensa);
     void ModifyPrensa();
     void RemovePrensa(int id_prensa);
     bool IsBarcodeValid(string barcode, int id_prensa);
     Tipo_Contramedidas getContramedidas(int id_prensa);
  
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IRuleMotorWCFChannel : IRequestMotorWCF, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RequestMotorWCFClient : System.ServiceModel.ClientBase<IRequestMotorWCF>, IRequestMotorWCF
{
    
    public RequestMotorWCFClient()
    {
    }


    public RequestMotorWCFClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public RequestMotorWCFClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RequestMotorWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RequestMotorWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }

    public void MarkAs_Async(long ids_Request, int state, int? id_User, int? id_Device)
    {
        base.Channel.MarkAs_Async(ids_Request, state, id_User, id_Device);
    }
    public void AddPrensa(int id_prensa)
    {
        base.Channel.AddPrensa(id_prensa);
    }
    public void ModifyPrensa()
    {
        base.Channel.ModifyPrensa();
    }
    public void RemovePrensa(int id_prensa)
    {
        base.Channel.RemovePrensa(id_prensa);
    }
    public bool IsBarcodeValid(string barcode, int id_prensa)
    {
        return this.Channel.IsBarcodeValid(barcode,id_prensa);
    }
    public Tipo_Contramedidas getContramedidas(int id_prensa)
    {
        return this.Channel.getContramedidas(id_prensa);
    }

    
}
